% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doubt.R
\name{?}
\alias{?}
\title{Modified question mark operator}
\usage{
"?"(e1, e2)
}
\arguments{
\item{e1}{lhs}

\item{e2}{rhs}
}
\description{
`?` was modified to allow definition of new operators (unary, binary or n-ary).
  We refer to those as "dubious" operators, both as a reference to the
  package name and to emphasize the fact that they're not parsed as proper
  operators.
.
Standard usage as documented in `?utils::Question` still works.
}
\details{
Every accessible function, custom defined or base/packaged, can be called as
 an infix operator, for example `1:5 %%intersect? 3:7` is equivalent to
 `intersect(1:5, 3:7)`. In that case, `%%intersect?` will have the precedence
 of `%%`, which is the most intuitive,
but any precedence including and below unary `+` can be used, for instance
`*intersect?` will have the precedence of `*`.

N-ary operators are supported for `?foo?` operators, for instance
`?paste? "a" ? "b" ? "c"` is the same as `paste("a", "b", "c")`,
`"a" ?paste? "b" ? "c"` works as well.

Define any operator containing `?` and that can be used in a way that is
syntactically valid and it will be executed with the same operator precedence
as `?`, which is just below `<-` and just above `=` (note that `?Syntax` is
inaccurate in this regard at time of writing). In practice this mean you can
assign with `x = "a" ?paste? "b" ? "c"` but not with `x <- "a" ?paste? "b" ? "c"`
}
\examples{
# multiplication with precedence of `?`
`?~` <- `*`
1 + 2 ?~ 3 + 4
# division  with precedence of `?`
`?divide?` <- `/`
1 + 2 ?divide? 3 + 4
# more useful : write a data frame to a csv file
\dontrun{
`?csv<-` <- function(e1, e2) eval.parent(substitute(write.csv(e2, e1)))
tempfile() ?csv<- cars
}
}
